{"version":3,"sources":["models/player.ts","models/card.ts","models/game.ts","index.ts"],"names":[],"mappings":";;;;;;ACAA,ADEA,ICFA,ADEA,ICFA,EDEA;ACFA,ADEA;ACFA,ADEA,YCFA,ADEA;ACFA,ADQE,WCRF,ADQE,ICRF,EDQE,CCRF,ADQc,IAAZ,EAAwB;ACPxB,ADIA,SCJA,ADIA,KCJA,ADIA,GCJkB,ADIF,CCHd,GDGF,OCJkB,EAEhB,QAFgB,EAGhB,WAHgB,EAIhB,SAJgB,EAKhB,UALgB,EAMhB,QANgB,EAOhB,WAPgB,EAQhB,SARgB,EAShB,UATgB,EAUhB,QAVgB,EAWhB,WAXgB,EAYhB,SAZgB,EAahB,UAbgB,EAchB,QAdgB,EAehB,WAfgB,EAgBhB,SAhBgB,EAiBhB,UAjBgB,EAkBhB,QAlBgB,EAmBhB,WAnBgB,EAoBhB,SApBgB,EAqBhB,UArBgB,EAsBhB,QAtBgB,EAuBhB,WAvBgB,EAwBhB,SAxBgB,EAyBhB,UAzBgB,EA0BhB,QA1BgB,EA2BhB,WA3BgB,EA4BhB,SA5BgB,EA6BhB,UA7BgB,EA8BhB,QA9BgB,EA+BhB,WA/BgB,EAgChB,SAhCgB,EAiChB,UAjCgB,EAkChB,QAlCgB,EAmChB,WAnCgB,EAoChB,SApCgB,EAqChB,WArCgB,EAsChB,SAtCgB,EAuChB,YAvCgB,EAwChB,UAxCgB,EAyChB,aAzCgB,EA0ChB,WA1CgB,EA2ChB,cA3CgB,EA4ChB,YA5CgB,EA6ChB,cA7CgB,EA8ChB,YA9CgB,EA+ChB,eA/CgB,EAgDhB,aAhDgB,EAiDhB,aAjDgB,EAkDhB,WAlDgB,EAmDhB,cAnDgB,EAoDhB,YApDgB,CAAlB;AAsDD,ADjDC,SAAA,KAAA,GAAkB,EAAlB;AGNF,ADAA,AFSI,IGTJ,ADAA,KFSS,CGTT,EDAA,CCAA,AHSI,EETJ,CFSgB,IAAZ,QGTJ,CAAA,CDAA,CAAA,KCAA,CAAA,CDAA,CAAA,UAAA,CAAA,CAAA,CCAA,CAAA,CAAA;AFuDA,AD7CG,SC6CH,IAAA;AEtDA,AFDA,ACCA,CDDA,EAAA,CECA,ADAA,MAAA,ECAA,CDAA,ECAA,aDAA,CAAA,CCAA,CAAA,KDAA,CAAA,CCAA,CAAA,MDAA,CAAA,CAAA,SCAA,CAAA,CAAA;AHWS,EAAA,MAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AGTF,ADAA,AFUI,IGVA,ADAJ,ICAQ,ADAR,GCAW,AHUA,IGVI,CHUC,KGVD,AHUJ,CGVI,GHUU,CAAd,GGVA,AHUkB,EGV7B,GHUW,GAA0B,IAAjC;AGTJ,ADDA,AFWG,GAFM,CGRL,YAAY,GAAqB,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAArC;AACA,ADFA,ICEI,QDFJ,SCEqB,GAAqB,QAAQ,CAAC,cAAT,CAAwB,WAAxB,CAA1C;AACA,ADHA,AFaS,EAAA,EGVL,IHUK,CAAA,EEbT,ECGa,EDHb,CCGkC,EDHlC,AFaS,CAAA,KGViC,CAAC,CHUlC,GAAP,UGVgC,AHUjB,CGVyC,GHUxD,EAA2B,MGVK,CAAlC;AACA,ADFE,AFYE,IGVA,KDFF,AFYO,IAAL,GEZF,AFYc,GEZM,CCEF,AHUhB,CEZF,ECEuC,QAAQ,CAAC,cAAT,CAAwB,kBAAxB,CAAzC;AACA,ADFE,AFYC,GAFM,CGRL,KDFF,KAAA,ECEc,CDFI,ECEiB,ADFnC,QCE2C,CAAC,cAAT,CAAwB,cAAxB,CAArC;AACA,ADFE,ICEE,KDFF,QCEe,GAAqB,CDFpC,GAAyB,EAAzB,ECE4C,CAAC,cAAT,CAAwB,aAAxB,CAAtC;AACA,ADFE,AFYO,EAAA,EGVL,IHUK,CEZP,AFYO,KEZP,ECEc,CDFE,CAAhB,AFYO,CGVkB,AHUlB,CGVT,cHUS,GAAP,YAAA;AEmCD,AFlCG,SAAK,YAAL;AGTJ,AHUG,GAFM,CGRH,mBAAmB,GAAG,SAAtB,mBAAsB,GAAA;AAC1B,ADFO,EAAA,ICEH,ADFG,CAAA,MCEI,GAAG,ADFP,CAAA,OCEe,CAAC,GDFhB,GAAP,QCEc,CAAwB,GDFtC,GCEc,CAAd;AACA,ADFE,AFYK,EAAA,EEZL,ECEE,EHUG,CAAA,EEZE,CAAC,GAAR,CAAY,ECEE,AHUT,CAAA,EGVY,OHUZ,CGVoB,CAAC,CHU5B,UAAiB,EGVE,CAAuB,EHU1C,CGVmB,CAAnB,AHUgC,wBEZ9B;ACGF,ADFC,AFYC,GEdK,GCIH,GHUG,EGVE,GAAG,AHUV,GAAa,KGVK,AHUlB,CGVmB,aAAT,CAAuB,GAAvB,CAA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","file":"Poker.77de5100.js","sourceRoot":"..","sourcesContent":["import Card from './card';\r\n\r\nexport default class Player {\r\n  name: string;\r\n  numberOfWins: number;\r\n  money: number = 1000;\r\n  cards: string[] = [];\r\n\r\n  constructor(name: string) {\r\n    this.name = name;\r\n  }\r\n\r\n  public hasMoney(): boolean {\r\n    return this.money <= 0 ? false : true;\r\n  }\r\n\r\n  public setName(name: string): void {\r\n    this.name = name;\r\n  }\r\n\r\n  public setNumberOfWins(): void {\r\n    this.numberOfWins++;\r\n  }\r\n\r\n  public takeCards(cards: string[]) {\r\n    this.cards = cards;\r\n  }\r\n}","export default class Card {\r\n  cards: string[] = [\r\n    '1 hearth',\r\n    '1 club',\r\n    '1 diamond',\r\n    '1 spade',\r\n    '2 hearth',\r\n    '2 club',\r\n    '2 diamond',\r\n    '2 spade',\r\n    '3 hearth',\r\n    '3 club',\r\n    '3 diamond',\r\n    '3 spade',\r\n    '4 hearth',\r\n    '4 club',\r\n    '4 diamond',\r\n    '4 spade',\r\n    '5 hearth',\r\n    '5 club',\r\n    '5 diamond',\r\n    '5 spade',\r\n    '6 hearth',\r\n    '6 club',\r\n    '6 diamond',\r\n    '6 spade',\r\n    '7 hearth',\r\n    '7 club',\r\n    '7 diamond',\r\n    '7 spade',\r\n    '8 hearth',\r\n    '8 club',\r\n    '8 diamond',\r\n    '8 spade',\r\n    '9 hearth',\r\n    '9 club',\r\n    '9 diamond',\r\n    '9 spade',\r\n    '10 hearth',\r\n    '10 club',\r\n    '10 diamond',\r\n    '10 spade',\r\n    'Jack hearth',\r\n    'Jack club',\r\n    'Jack diamond',\r\n    'Jack spade',\r\n    'Queen hearth',\r\n    'Queen club',\r\n    'Queen diamond',\r\n    'Queen spade',\r\n    'King hearth',\r\n    'King club',\r\n    'King diamond',\r\n    'King spade',\r\n  ];\r\n}\r\n","import Player from './player';\r\nimport Card from './card';\r\n\r\nexport default class Game {\r\n  name: string;\r\n  players: Player[] = [];\r\n  cards: string[] = [];\r\n  cardsOnTable: string[] = [];\r\n  money: number = 0;\r\n  isOver: boolean;\r\n\r\n  public checkResult(): void {\r\n    console.log(\"AND THE WINNER IS: THIS FUNCTION NEEDS IMPLEMENTATION.\");\r\n  }\r\n\r\n  public startGame(): void {\r\n    let deck = new Card();\r\n    this.cards = deck.cards;\r\n  }\r\n\r\n  public deletePlayerFromGame(player: Player): void {\r\n    this.players.splice(this.players.indexOf(player), 1);\r\n  }\r\n\r\n  public addPlayer(name: string): void {\r\n    this.players.push(new Player(name));\r\n  }\r\n\r\n  public dealCardsToPlayers(): void {\r\n    const { length: playerLength } = this.players;\r\n\r\n    for (let i = 0; i < playerLength; i++) {\r\n      let playersCards: string[] = this.players[i].cards;\r\n      playersCards.push(this.getRandomCard());\r\n      playersCards.push(this.getRandomCard());\r\n    }\r\n  }\r\n\r\n  public dealCardsToTable(): void {\r\n    this.cardsOnTable.push(this.getRandomCard());\r\n    this.cardsOnTable.push(this.getRandomCard());\r\n    this.cardsOnTable.push(this.getRandomCard());\r\n  }\r\n\r\n  public dealNextCard(): void {\r\n    this.cardsOnTable.push(this.getRandomCard());\r\n  }\r\n\r\n  private getRandomCard(): string {\r\n    let randomIndex = Math.floor(Math.random() * this.cards.length);\r\n    let randomCard = this.cards[randomIndex];\r\n\r\n    this.cards.splice(randomIndex, 1);\r\n    return randomCard;\r\n  }\r\n}","import Game from './models/game';\r\nimport Player from './models/player';\r\n\r\nlet game = new Game();\r\nlet addPlayerBtn: HTMLInputElement = document.getElementById('addPlayer') as HTMLInputElement;\r\nlet dealCardsToPlayer: HTMLInputElement = document.getElementById('dealCards') as HTMLInputElement;\r\nlet startGame: HTMLInputElement = document.getElementById('startGame') as HTMLInputElement;\r\nlet dealCardsToTable: HTMLInputElement = document.getElementById('dealCardsToTable') as HTMLInputElement;\r\nlet dealNextCard: HTMLInputElement = document.getElementById('dealNextCard') as HTMLInputElement;\r\nlet checkRusltBtn: HTMLInputElement = document.getElementById('checkResult') as HTMLInputElement;\r\nlet raisedAmount: number = 0;\r\n\r\nconst displayCardsOnTable = (): void => {\r\n  let element = document.getElementById(\"game\");\r\n  let cardsOnTable = document.createElement(\"p\");\r\n  let money = document.createElement(\"p\");\r\n\r\n  cardsOnTable.id = \"cardsOnTable\";\r\n  money.id = \"moneyOnTable\"\r\n  money.innerHTML = `This is money on the Table ${game.money}`;\r\n\r\n  const { length: cardsOnTableLength } = game.cardsOnTable;\r\n  for (let i = 0; i < cardsOnTableLength; i++) {\r\n\r\n    cardsOnTable.innerHTML += game.cardsOnTable[i] + \" \";\r\n  }\r\n  element.appendChild(money);\r\n  element.appendChild(cardsOnTable);\r\n}\r\n\r\nconst displayPlayers = (): void => {\r\n  let players: HTMLElement = document.getElementById('players');\r\n\r\n  const { length: playersLength } = game.players;\r\n  for (let i = 0; i < playersLength; i++) {\r\n    let player: HTMLElement = document.createElement(\"div\");\r\n    let playerName: HTMLElement = document.createElement(\"h4\")\r\n    let playerMoney: HTMLElement = document.createElement(\"h5\");\r\n    let cards: HTMLElement = document.createElement(\"p\");\r\n    let checkBtn: HTMLInputElement = document.createElement('input');\r\n    let foldBtn: HTMLInputElement = document.createElement(\"input\");\r\n    let raiseBtn: HTMLInputElement = document.createElement(\"input\");\r\n    let amountToRaise: HTMLInputElement = document.createElement(\"input\");\r\n\r\n    player.id = `player${game.players[i].name}`\r\n\r\n    playerName.innerHTML = game.players[i].name;\r\n    playerMoney.innerHTML = `This is your money: ${game.players[i].money.toString()}`;\r\n    playerMoney.id = `playerMoney${game.players[i].name}`;\r\n\r\n    checkBtn.type = \"button\";\r\n    checkBtn.value = \"Check \";\r\n    checkBtn.id = \"check\";\r\n\r\n    foldBtn.type = \"button\";\r\n    foldBtn.value = \"Fold\";\r\n    foldBtn.id = \"fold\";\r\n\r\n    raiseBtn.type = \"button\";\r\n    raiseBtn.value = \"Raise\";\r\n    raiseBtn.id = \"raise\";\r\n\r\n    amountToRaise.type = \"text\"\r\n    amountToRaise.id = \"amountToRaise\" + game.players[i].name;\r\n\r\n    const { length: cardsLength } = game.players[i].cards;\r\n    for (let j = 0; j < cardsLength; j++) {\r\n      cards.innerHTML += game.players[i].cards[j];\r\n    }\r\n\r\n    cards.innerHTML = game.players[i].cards[0] + \" \" + game.players[i].cards[1];\r\n    players.appendChild(player);\r\n    player.appendChild(playerName);\r\n    player.appendChild(cards);\r\n    player.appendChild(playerMoney);\r\n    player.appendChild(checkBtn);\r\n    player.appendChild(foldBtn);\r\n    player.appendChild(raiseBtn)\r\n    player.appendChild(amountToRaise);\r\n\r\n    checkBtn.addEventListener('click', checkFnc(playerName, i))\r\n\r\n    foldBtn.addEventListener('click', foldFnc(playerName, i))\r\n\r\n    raiseBtn.addEventListener('click', raiseFnc(i));\r\n  }\r\n\r\n}\r\n\r\nconst removeElement = (elementId: string): void => {\r\n  let element = document.getElementById(elementId);\r\n  element.remove();\r\n}\r\n\r\nconst foldFnc = (playerName: HTMLElement, i: number): (this: HTMLInputElement) => void => {\r\n  return () => {\r\n    console.log(`fold is clicked by ${playerName.innerHTML}`);\r\n    game.deletePlayerFromGame(game.players[i]);\r\n    removeElement(`player${game.players[i].name}`);\r\n  };\r\n}\r\n\r\nconst checkFnc = (playerName: HTMLElement, i: number): (this: HTMLInputElement) => void => {\r\n  return () => {\r\n    console.log(`Checked is clicked by ${playerName.innerHTML}`);\r\n    updatePlayerMoney(i, raisedAmount);\r\n    updateMoneyOnTable(raisedAmount);\r\n    raisedAmount = 0;\r\n  };\r\n}\r\n\r\nconst raiseFnc = (i: number): (this: HTMLInputElement) => void => {\r\n  return () => {\r\n    let amount: number = Number((<HTMLInputElement>document.getElementById(\"amountToRaise\" + game.players[i].name)).value);\r\n    updatePlayerMoney(i, amount);\r\n    updateMoneyOnTable(amount);\r\n  };\r\n}\r\n\r\nconst updateCardsOnTable = (): void => {\r\n  let cardsOnTable = document.getElementById('cardsOnTable');\r\n  cardsOnTable.innerHTML = \"\"\r\n\r\n  const { length: cardsOnTableLength } = game.cardsOnTable;\r\n  for (let i = 0; i < cardsOnTableLength; i++) {\r\n    cardsOnTable.innerHTML += game.cardsOnTable[i] + \" \";\r\n  }\r\n}\r\n\r\nconst updateMoneyOnTable = (amount: number): void => {\r\n  let moneyOnTable: HTMLElement = document.getElementById(\"moneyOnTable\");\r\n  raisedAmount = amount;\r\n\r\n  game.money += amount;\r\n  moneyOnTable.innerHTML = game.money.toString();\r\n}\r\n\r\nconst updatePlayerMoney = (i: number, amount: number) => {\r\n  let playerMoney: HTMLElement = document.getElementById(\"playerMoney\" + game.players[i].name);\r\n  playerMoney.innerHTML = \"\";\r\n  game.players[i].money -= amount;\r\n  playerMoney.innerHTML = game.players[i].money.toString();\r\n}\r\n\r\naddPlayerBtn.addEventListener('click', () => {\r\n  let playerName: string = (<HTMLInputElement>document.getElementById(\"playerName\")).value;\r\n  game.players.push(new Player(playerName));\r\n  startGame.disabled = false;\r\n  (<HTMLInputElement>document.getElementById(\"playerName\")).value = \"\"\r\n})\r\n\r\nstartGame.addEventListener('click', () => {\r\n  game.startGame();\r\n  dealCardsToPlayer.disabled = false;\r\n  addPlayerBtn.disabled = true;\r\n  startGame.disabled = true;\r\n})\r\n\r\ndealCardsToPlayer.addEventListener('click', () => {\r\n  game.dealCardsToPlayers();\r\n  dealCardsToTable.disabled = false;\r\n  dealCardsToPlayer.disabled = true;\r\n  displayPlayers();\r\n})\r\n\r\ndealCardsToTable.addEventListener('click', () => {\r\n  game.dealCardsToTable();\r\n  displayCardsOnTable()\r\n  dealCardsToTable.disabled = true;\r\n  dealNextCard.disabled = false;\r\n})\r\n\r\ndealNextCard.addEventListener('click', () => {\r\n  game.dealNextCard();\r\n  updateCardsOnTable();\r\n  if (game.cardsOnTable.length === 5) {\r\n    dealNextCard.disabled = true;\r\n    checkRusltBtn.disabled = false;\r\n  }\r\n})\r\n\r\ncheckRusltBtn.addEventListener('click', () => {\r\n  game.checkResult();\r\n})"]}